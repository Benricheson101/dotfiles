#!/usr/bin/env bash

#
# REQUIREMENTS:
# jq
# b2 command line thing
# xclip
# notify-send
#

. ~/scripts/util

bucketName='red-panda'
url='https://i.red-panda.red/'

adjectives="$HOME/scripts/adjectives.txt"
animals="$HOME/scripts/animals.txt"
emojis="$HOME/scripts/emojis.txt"

# bucketName='porg-imgs'
# url='https://i.what-the-f.uk/'

random_emoji() {
  shuf -n 1 "$emojis"
}

temp=$(mktemp /tmp/XXXXXX.png)
cat /dev/stdin > $temp

[[ -s $temp ]] || exit 1;

cat $temp | xclip -sel clip -t image/png

ext=$(rg '\.(.*)$' -o -r '$1'<<< $(basename "$temp"))

adjective=$(capitalize_first_word $(shuf -n 1 "$adjectives"))
animal=$(capitalize_first_word $(shuf -n 1 "$animals"))

# emoji1=$(random_emoji)
# emoji2=$(random_emoji)
# emoji3=$(random_emoji)

file="${adjective}${animal}.${ext}"
# file="${emoji1}${emoji2}${emoji3}.${ext}"

a=$(b2 upload_file $bucketName $temp "$file" --noProgress)

json=$(echo $a | grep -o '\{.*\}$')
filename=$(echo $json | jq -r '.fileName')

if [[ -z $filename ]]; then
  notify-send -u critical 'Screenshot Upload Error' 'The server returned null or did not respond in time'
  exit 1
fi

fullurl="$url$filename"
# fullurl="$url$"

echo $fullurl >> ~/Pictures/screenshots.txt
printf '%s' $fullurl
printf '%s' $fullurl | xclip -sel clip
notify-send -u normal -i $temp 'Screenshot Uploaded' $fullurl

rm $temp

# vim:ft=sh
